// INFIX TO POSTFIX 

class Solution {
    // Function to convert an infix expression to a postfix expression.
    public static String infixToPostfix(String exp) {
        // Your code here
        StringBuilder sb = new StringBuilder();
        Stack<Character>st = new Stack<>();
        for (char c:exp.toCharArray())
        {
            if (Character.isLetterOrDigit(c))
            {
                sb.append(c);
            }
            else if (c=='+' || c=='-' || c=='*' || c=='/' || c=='^')
            {
               
               while(!st.isEmpty() && priority(c)<=priority(st.peek()))
               {
                   sb.append(st.pop());
               }
               st.push(c);
            }
            else if (c=='(')
            {
                st.push(c);
            }
            else if (c==')')
            {
                while(!st.isEmpty() && st.peek()!='(')
                {
                   sb.append(st.pop());
                }
                if (!st.isEmpty() && st.peek()=='(')
                {
                    st.pop();
                }
                
            }
            
        }
        while(!st.isEmpty())
        {
            
                sb.append(st.pop());
            
        }
        return sb.toString();
    }
    static int priority(char c)
    {
        if (c=='+' || c=='-')
        {
            return 1;
        }
        else if (c=='*' || c=='/')
        {
            return 2;
        }
        else if (c=='^')
        {
            return 3;
        }
        else
        {
            return -1;
        }
    }
   
}
